#include <time.h>
#include <stdlib.h>
#include "maze.h"

static void append_set(row_t *rows, int r)
{
	set_t tmp[rows->nb_set];

	for (int i = 0; i < (rows->nb_set - 1); i++) {
		tmp[i].length = rows->size_set[i].length;
	}
	free(rows->size_set);
	rows->size_set = malloc(sizeof(set_t) * rows->nb_set);
	tmp[rows->nb_set - 1].length = r;
	for (int i = 0; i < rows->nb_set; i++) {
		rows->size_set[i].length = tmp[i].length;
	}
}

void generate(row_t *rows, area_t *size)
{
	int r;
	int old_r = -1;;
	int count = 0;

	rows->nb_set = 0;
	rows->size_set = malloc(sizeof(set_t) * 1);
	rows->size_set[0].length = -1;
	srand(time(NULL));
	for (int x = 0; x < size->x; x++) {
		r = ((rand() % 3) > 0) ? 1 : 0;
		count++;
		if (old_r != -1 && r != old_r) {
			rows->nb_set++;
			append_set(rows, count);
			count = 0;
		}
		old_r = r;
	}
	if (old_r != -1 && r != old_r) {
		rows->nb_set++;
		append_set(rows, count);
	}
}
